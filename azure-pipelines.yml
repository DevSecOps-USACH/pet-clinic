pool:
  vmImage: ubuntu-latest
stages:
- stage: Build 
  jobs:
  - job: build
    displayName: 'Build'
    steps:
    - task: CopyFiles@2
      inputs:
        sourceFolder: '$(Build.SourcesDirectory)'
        contents: |
            **/build/libs/*.jar
        targetFolder: '$(Build.ArtifactStagingDirectory)'


#- job: horusec
#  workspace:
#    clean: all
#  displayName: Horusec
#  steps:
#    - script: |
#        curl -fsSL https://raw.githubusercontent.com/ZupIT/horusec/main/deployments/scripts/install.sh | bash -s latest
#        horusec start -p ./src   
    
- stage: Deploy 
  jobs:  
  - job: buildimage
    displayName:  Build Image
    steps:
    
    - task: Docker@2
      inputs:
        containerRegistry: 'Docker'
        command: 'login'
      displayName: Docker registry login

  - job: Kubernetes
    displayName: Deploy
    steps:

    - task: KubectlInstaller@0
      inputs:
        kubectlVersion: 'latest'
      displayName: Instalacion Kubectl
      
    - task: Kubernetes@1
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'Kubernetes'
        namespace: 'default'
        command: 'login'
      displayName: AKS Login
      
    - task: Kubernetes@1
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'Kubernetes'
        namespace: 'default'
        command: 'apply'
        arguments: '-f kubernetes/deployment-app.yaml'
        secretType: 'dockerRegistry'
        containerRegistryType: 'Azure Container Registry'
        azureSubscriptionEndpointForSecrets: 'azure(9909fced-8203-44b6-af68-11f833a37e60)'
      displayName: AKS deploy
    
    - task: Kubernetes@1
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'Kubernetes'
        namespace: 'default'
        command: 'expose'
        arguments: 'deployment petclinic-deployment --type=LoadBalancer --name=pet-clinic'
        secretType: 'dockerRegistry'
        containerRegistryType: 'Azure Container Registry'
      continueOnError: true
      displayName: Expose deployment
    
    - script: |
          ipApp=$(kubectl get services pet-clinic --output jsonpath='{.status.loadBalancer.ingress[0].ip}')
          echo $ipApp
          URLApp=http://$ipApp:8085
          echo $URLApp
          echo "##vso[task.setvariable variable=appDeploy;isOutput=true]$URLApp"
      name: getip
      displayName: Get IP
    
    - script: echo $(getip.appDeploy) 

    #- task: OwaspZapScan@2
    #  inputs:
    #    ZapApiUrl: 'test.com'
    #    ZapApiKey: 'test'
    #    TargetUrl: 'http://20.206.197.95:8085'
    #    ExecuteSpiderScan: true
    #  continueOnError: true

- stage: DAST 
  jobs: 
  - job: DAST
    steps:     
    - script: |
        docker pull owasp/zap2docker-stable
        appURL=echo $(getip.appDeploy)
        echo $appURL
        echo $(getip.appDeploy)
        docker run --rm -v $(pwd):/zap/wrk/:rw -t owasp/zap2docker-stable zap-baseline.py -t $appURL -r DAST.html 
      continueOnError: true
      displayName: DAST OWASP ZAP
    
    #- script: |
    #    docker pull aquasec/kube-hunter:aqua
    #    docker run -it --rm --network aks-getting-started-ae3967d2.hcp.brazilsouth.azmk8s.io aquasec/kube-hunter:aqua --token eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0aW1lIjoxNjU2MzgzMDAzLjM5NDI0NzgsImVtYWlsIjoiY2xhZ29zMzUzQGdtYWlsLmNvbSIsInIiOiI5NWE3NmY1ZCJ9.TGSvUuNe0W2AGj4IqxzgZyjXXyi_WwlyvubS3K8Tpow
